dnl $Id$
dnl
dnl Process this file with autoconf to produce a configure script.
dnl

AC_INIT(config.h.in)
AM_INIT_AUTOMAKE(okws, 3.1.29.0)
AM_CONFIG_HEADER(config.h)

SFS_INIT_LDVERSION(3500, SFSLITE_ABI_VERSION)

AC_CONFIG_MACRO_DIR([m4])

AC_SUBST(PUB)
AC_SUBST(XMLRPCC)
AC_SUBST(OKRPCC)

AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC([clang gcc cc])
AC_PROG_CPP
AC_PROG_CXX([clang++ g++ c++])
OKWS_BISON
SFS_WFLAGS
SFS_PATH_CPP
AC_PROG_INSTALL_C
AC_PROG_LN_S
AC_PATH_PROG(PERL, perl, perl)
AC_PATH_PROGS(M4, gm4 gnum4 m4, '$(top_srcdir)/missing')
AC_PATH_PROGS(UPTIME, uptime, '$(top_srcdir)/missing')

dnl
dnl On FreeBSD, look for PTH by default.  However, PTH stopped working
dnl on Linux with hard system calls, so use pthreads by default on
dnl Linux, and don't give the option for PTH.
dnl
OKWS_DO_THREADS

test "$PUB" || PUB='$(top_builddir)/pub/pub'
test "$XMLRPCC" || XMLRPCC='$(top_builddir)/xmlrpcc/xmlrpcc'
test "$RPCC" || RPCC='/usr/local/bin/rpcc'
test "$TAME" || TAME='/usr/local/bin/tame'
dnl
dnl OKWS_TAG might set "with_sfs", so it should come before
dnl SFS_SFS, which will reset it if needs be
dnl
OKWS_TAG

# XXX - next line seems to be required for some autoconf/-make/libtool versions
test -z "$target" && target=NONE
AC_DISABLE_SHARED
AM_PROG_LIBTOOL
AM_PROG_LEX

AM_CONDITIONAL(STATIC, test "$enable_shared" != yes)

AM_PATH_PYTHON(,, [:])
AM_CONDITIONAL([HAVE_PYTHON], [test "$PYTHON" != :])

SFS_SFS
SFS_SET_CLOCK
SFS_FIND_RESOLV
OKWS_LIBS
OKWS_MYSQL
OKWS_EXPAT
OKWS_GMTOFF
OKWS_SSL
OKWS_SNAPPY
OKWS_LINUX_PRCTL_DUMP

dnl
dnl Need to use the xmlrpcc if possible when publishing OKWS .x files
dnl
OKRPCC="$RPCC"
if test "${use_xml}" = "yes"
then
	OKRPCC="$XMLRPCC"
fi


AM_CONDITIONAL(USE_MYSQL, test "${sfs_cv_libmysqlclient+set}")

SFS_LAYOUT_VERSION
SFS_MAKE_SYMLINK

SHORTVERSION=`echo ${layoutversion} | awk -F. '{ print $1 "." $2 }' `
AC_SUBST(SHORTVERSION)

if test -z "$okwslibdir"; then
   okwslibdirp='${pkglibdir}-${SHORTVERSION}'
   okwslibdir='${pkglibdir}-${SHORTVERSION}${okwstagdir}'
fi
if test -z "$okwsincludedir"; then
   okwsincludedirp='${pkgincludedir}-${SHORTVERSION}'
   okwsincludedir='${pkgincludedir}-${SHORTVERSION}${okwstagdir}'
fi
okwsexecdir="$okwslibdir"
CPPFLAG="$CPPFLAGS -DEXECDIR="'\"$(okwsexecdir)\"'

if test "${okws_systembin+set}" = "set" ; then
	okwsbindir='${prefix}/bin'
else
	okwsbindir="$okwslibdir"
fi  
AC_SUBST(okwsincludedir)
AC_SUBST(okwsincludedirp)
AC_SUBST(okwslibdir)
AC_SUBST(okwsbindir)
AC_SUBST(okwslibdirp)
AC_SUBST(okwsexecdir)

SFS_CFLAGS

CPPFLAGS="$CPPFLAGS -I"'$(top_srcdir)'

dnl
dnl for .x files, need header in build directory
dnl
for lib in libpub libaok libweb libamysql ezdb/libezdb ; do
    CPPFLAGS="$CPPFLAGS -I"'$(top_builddir)'"/$lib"
done

dnl
dnl library directories
dnl
for lib in libpub libahttp libokxml libaok libamt libamt_pthread libamysql libweb libokssl librfn ezdb/libezdb ; do
    CPPFLAGS="$CPPFLAGS -I"'$(top_srcdir)'"/$lib"
done

dnl
dnl when compiling the PUB program, do not link againgst libahttp
dnl
LIBPUB='$(top_builddir)/libpub/libpub.la'
LIBAHTTP='$(top_builddir)/libahttp/libahttp.la'
LIBOKXML='$(top_builddir)/libokxml/libokxml.la'
LIBAOK='$(top_builddir)/libaok/libaok.la'
LIBAMT='$(top_builddir)/libamt/libamt.la'
if test "$ac_do_pthreads" = "1"; then
   LIBAMT_PTHREAD='$(top_builddir)/libamt_pthread/libamt_pthread.la'
fi
LIBAMYSQL='$(top_builddir)/libamysql/libamysql.la'
LIBWEB='$(top_builddir)/libweb/libweb.la'
LIBEZDB='$(top_builddir)/ezdb/libezdb/libezdb.la'
LIBEZDBSRV='$(top_builddir)/ezdb/libezdb/libezdbsrv.la'
LIBOKSSL='$(top_builddir)/libokssl/libokssl.la'
LIBRFN='$(top_builddir)/librfn/librfn.la'
LDADD_PUB='$(LIBPUB) '"$LDADD"
LDADD_RFN='$(LIBRFN) $(LIBAHTTP) $(LIBPUB) '"$LDADD"
LDADD='$(LIBEZDB) $(LIBAOK) $(LIBRFN) $(LIBWEB) $(LIBOKSSL) $(LIBOKXML) $(LIBAHTTP) $(LIBPUB) '"$LDADD"' $(LIBEXPAT) $(LIBSSL)'
LDADD_AMT='$(LIBAMT) $(LIBAMT_PTHREAD)'"$LDADD"
if test "$enable_shared" = yes; then
   LDEPS=
   LDEPS_PUB=
   LDEPS_RFN=
   LDEPS_AMT=
else
   LDEPS_PUB='$(LIBPUB) '"$LDEPS"
   LDEPS_RFN='$(LIBPUB) $(LIBAHTTP) $(LIBRFN) '"$LDEPS"
   LDEPS='$(LIBWEB) $(LIBAOK) $(LIBAHTTP) $(LIBOKXML) $(LIBPUB) '"$LDEPS"
   LDEPS_AMT='$(LIBAMT) $(LIBAMT_PTHREAD)'"$LDEPS"
   LDEPS_AMYSQL='$(LIBEZDBSRV) $(LIBAMT) $(LIBAMT_PTHREAD) $(LIBAMYSQL) '"$LDEPS"
fi
LDADD_AMYSQL='$(LIBEZDBSRV) $(LIBAMT) $(LIBAMT_PTHREAD) $(LIBAMYSQL) '"$LDADD"' $(LDADD_THR) $(LDADD_MYSQL) '


dnl
dnl Where OKWS stores its files (except for those otherwise dumped
dnl in lib/ and include/)
dnl
OKWS_PREFIX

dnl
dnl Macros and variables for dealing with an OKWS 'Module'.
dnl An OKWS 'Module' is a bundle of services, libraries, and maybe
dnl DB-proxies or RPC servers.  In this case, we're just build a test
dnl module for out-of-the-box testing. In other cases, we might 
dnl be using this macro to build something useful.
dnl
OKWS_MODULE

dnl
dnl prefer c++11
dnl
SFS_CPP11_IF_POSSIBLE

dnl
dnl The OKWS prefix macro sets the module name to $PACKAGE, but
dnl we want to hardcode to 'test' in this case.
dnl
module_name='test'

dnl
dnl Set FLEX version since we have version-specific fixes for FLEX memory
dnl leaks
dnl
OKWS_FLEX_VERSION

ETAGS_ARGS='-C /dev/null'

OKWS_SET_VERSION

AC_SUBST(LIBPUB)
AC_SUBST(LIBAHTTP)
AC_SUBST(LIBOKXML)
AC_SUBST(LIBAOK)
AC_SUBST(LIBAMT)
AC_SUBST(LIBAMT_PTHREAD)
AC_SUBST(LIBWEB)
AC_SUBST(LIBOKSSL)
AC_SUBST(LIBRFN)
AC_SUBST(LIBEZDB)
AC_SUBST(LIBEZDBSRV)
AC_SUBST(LIBAMYSQL)
AC_SUBST(LDADD_PUB)
AC_SUBST(LDEPS_PUB)
AC_SUBST(LDADD_RFN)
AC_SUBST(LDEPS_RFN)
AC_SUBST(LDADD_AMT)
AC_SUBST(LDADD_AMYSQL)
AC_SUBST(LDEPS_AMT)
AC_SUBST(LDEPS_AMYSQL)
AC_SUBST(ETAGS_ARGS)

PUB_PDEBUG
PUBFLAGS='-rF'
AC_SUBST(PUBFLAGS)

AC_CONFIG_COMMANDS([mkdir], [$MKDIR_P py/okws])
AC_OUTPUT(libpub/Makefile pub/Makefile 
	  okd/Makefile libahttp/Makefile libaok/Makefile  
	  libokxml/Makefile client/Makefile libamt/Makefile libamysql/Makefile 
	  libweb/Makefile logd/Makefile Makefile conf/Makefile
	  conf/freebsd/Makefile test/Makefile test/unit/Makefile
	  test/system/Makefile test/pub/Makefile htdocs/Makefile contrib/Makefile
	  xmlrpcc/Makefile test/system/xmlxlate/Makefile 
	  test/system/3tier/Makefile libokssl/Makefile ssld/Makefile
	  librfn/Makefile test/regtest/Makefile test/regtest/cases/Makefile
	  libamt_pthread/Makefile ezdb/Makefile ezdb/libezdb/Makefile
	  ezdb/server/Makefile py/Makefile py/gen_okws_config.sh)
